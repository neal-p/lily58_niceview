/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        test_combo {
            bindings = <&to 1>;
            key-positions = <0>;
        };
    };

    behaviors {
        left_tap_dance: left_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&to 1>, <&to 0>;

            tapping-term-ms = <500>;
        };

        right_tap_dance: right_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sl 2>, <&to 2>, <&to 0>;
        };

        hold_layer_change_tap_kp: hold_layer_change_tap_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER_CHANGE_TAP_KP";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <10000>;
            quick-tap-ms = <1000>;
            require-prior-idle-ms = <10>;
            flavor = "balanced";
        };

        always_to_zero: always_to_zero {
            compatible = "zmk,behavior-tap-dance";
            label = "ALWAYS_TO_ZERO";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 0>, <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3                                &kp N4  &kp N5                                   &kp N6            &kp N7  &kp N8                                   &kp N9   &kp N0    &trans
&kp TAB    &kp Q   &kp W   &kp E                                 &kp R   &kp T                                    &kp Y             &kp U   &kp I                                    &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D                                 &kp F   &kp G                                    &kp H             &kp J   &kp K                                    &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C                                 &kp V   &kp B            &trans       &trans     &kp N             &kp M   &kp COMMA                                &kp DOT  &kp FSLH  &trans
                           &hold_layer_change_tap_kp 3 LEFT_WIN  &trans  &left_tap_dance  &kp ENTER    &kp SPACE  &right_tap_dance  &trans  &hold_layer_change_tap_kp 3 PRINTSCREEN
            >;
        };

        left_mod {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                             &trans           &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &trans           &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &trans           &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans    &trans  &trans           &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &always_to_zero  &trans    &trans  &always_to_zero  &trans  &trans
            >;
        };

        right_mod {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                             &trans           &trans    &trans   &trans     &trans  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans                             &trans           &kp U     &kp I    &kp P      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &kp UP_ARROW     &kp DOWN  &kp UP   &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans    &trans  &kp HOME         &kp HOME  &kp END  &kp END    &trans  &trans
                        &trans  &trans  &always_to_zero  &trans    &trans  &always_to_zero  &trans    &trans
            >;
        };

        danger {
            bindings = <
&sys_reset  &bootloader  &bt BT_CLR_ALL  &trans  &trans  &trans                    &trans  &trans  &trans  &bt BT_CLR_ALL  &bootloader  &sys_reset
&trans      &trans       &trans          &trans  &trans  &trans                    &trans  &trans  &trans  &trans          &trans       &trans
&trans      &trans       &trans          &trans  &trans  &trans                    &trans  &trans  &trans  &trans          &trans       &trans
&trans      &trans       &trans          &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans          &trans       &trans
                                         &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
